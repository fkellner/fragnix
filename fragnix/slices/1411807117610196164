{"sliceID":1411807117610196164,"fragment":[" \ntailsTree ::\n            (Sized a, Sized b) =>\n            (FingerTree a -> b) -> FingerTree a -> FingerTree b","tailsTree _ Empty = Empty\ntailsTree f (Single x) = Single (f (Single x))\ntailsTree f (Deep n pr m sf)\n  = Deep n (fmap (\\ pr' -> f (deep pr' m sf)) (tailsDigit pr))\n      (tailsTree f' m)\n      (fmap (f . digitToTree) (tailsDigit sf))\n  where f' ms\n          = let Just2 node m' = viewLTree ms in\n              fmap (\\ pr' -> f (deep pr' m' sf)) (tailsNode node)"],"usages":[{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Empty"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Single"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Deep"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"fmap"},"qualification":null},{"reference":{"otherSlice":2394763771172834851},"usedName":{"valueIdentifier":"deep"},"qualification":null},{"reference":{"otherSlice":7331743722072733846},"usedName":{"valueIdentifier":"tailsDigit"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"."},"qualification":null},{"reference":{"otherSlice":5966219760769714973},"usedName":{"valueIdentifier":"digitToTree"},"qualification":null},{"reference":{"otherSlice":4852691830867320328},"usedName":{"typeName":"Maybe2","constructorIdentifier":"Just2"},"qualification":null},{"reference":{"otherSlice":5444224950462027387},"usedName":{"valueIdentifier":"viewLTree"},"qualification":null},{"reference":{"otherSlice":1464299008190203602},"usedName":{"valueIdentifier":"tailsNode"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"typeIdentifier":"Sized"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeIdentifier":"FingerTree"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}