{"sliceID":4685245318085468842,"fragment":[" \nsubmapCmp :: (a -> b -> Bool) -> IntMap a -> IntMap b -> Ordering","submapCmp predicate t1@(Bin p1 m1 l1 r1) (Bin p2 m2 l2 r2)\n  | shorter m1 m2 = GT\n  | shorter m2 m1 = submapCmpLt\n  | p1 == p2 = submapCmpEq\n  | otherwise = GT\n  where submapCmpLt\n          | nomatch p1 p2 m2 = GT\n          | zero p1 m2 = submapCmp predicate t1 l2\n          | otherwise = submapCmp predicate t1 r2\n        submapCmpEq\n          = case (submapCmp predicate l1 l2, submapCmp predicate r1 r2) of\n                (GT, _) -> GT\n                (_, GT) -> GT\n                (EQ, EQ) -> EQ\n                _ -> LT\nsubmapCmp _ (Bin _ _ _ _) _ = GT\nsubmapCmp predicate (Tip kx x) (Tip ky y)\n  | (kx == ky) && predicate x y = EQ\n  | otherwise = GT\nsubmapCmp predicate (Tip k x) t\n  = case lookup k t of\n        Just y | predicate x y -> LT\n        _ -> GT\nsubmapCmp _ Nil Nil = EQ\nsubmapCmp _ Nil _ = LT"],"usages":[{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Bin"},"qualification":null},{"reference":{"otherSlice":7968970582648128070},"usedName":{"valueIdentifier":"shorter"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Ordering","constructorIdentifier":"GT"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"=="},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"otherwise"},"qualification":null},{"reference":{"otherSlice":6817481598170301897},"usedName":{"valueIdentifier":"nomatch"},"qualification":null},{"reference":{"otherSlice":8074001225160819453},"usedName":{"valueIdentifier":"zero"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Ordering","constructorIdentifier":"EQ"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Ordering","constructorIdentifier":"LT"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Tip"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"&&"},"qualification":null},{"reference":{"otherSlice":1723602956658161090},"usedName":{"valueIdentifier":"lookup"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Maybe","constructorIdentifier":"Just"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Nil"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Bool"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeIdentifier":"IntMap"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Ordering"},"qualification":null}],"language":["MagicHash","DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}