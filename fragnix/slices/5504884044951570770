{"sliceID":5504884044951570770,"fragment":[" \nadjustTree ::\n             Sized a => (Int -> a -> a) -> Int -> FingerTree a -> FingerTree a","adjustTree _ _ Empty = error \"adjustTree of empty tree\"\nadjustTree f i (Single x) = Single (f i x)\nadjustTree f i (Deep s pr m sf)\n  | i < spr = Deep s (adjustDigit f i pr) m sf\n  | i < spm = Deep s pr (adjustTree (adjustNode f) (i - spr) m) sf\n  | otherwise = Deep s pr m (adjustDigit f (i - spm) sf)\n  where spr = size pr\n        spm = spr + size m"],"usages":[{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Empty"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"error"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Single"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Deep"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"<"},"qualification":null},{"reference":{"otherSlice":218980783238756344},"usedName":{"valueIdentifier":"adjustDigit"},"qualification":null},{"reference":{"otherSlice":492241304739887292},"usedName":{"valueIdentifier":"adjustNode"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"-"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"otherwise"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"valueIdentifier":"size"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"+"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"typeIdentifier":"Sized"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Int"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeIdentifier":"FingerTree"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}