{"sliceID":251217645440089785,"fragment":[" \nsplitLookup :: Key -> IntMap a -> (IntMap a, Maybe a, IntMap a)","splitLookup k t\n  = case t of\n        Bin _ m l r | m < 0 ->\n                      if k >= 0 then\n                        case go k l of\n                            (lt, fnd, gt) -> let lt' = union r lt in lt' `seq` (lt', fnd, gt)\n                        else\n                        case go k r of\n                            (lt, fnd, gt) -> let gt' = union gt l in gt' `seq` (lt, fnd, gt')\n        _ -> go k t\n  where go k' t'@(Bin p m l r)\n          | nomatch k' p m =\n            if k' > p then (t', Nothing, Nil) else (Nil, Nothing, t')\n          | zero k' m =\n            case go k' l of\n                (lt, fnd, gt) -> let gt' = union gt r in gt' `seq` (lt, fnd, gt')\n          | otherwise =\n            case go k' r of\n                (lt, fnd, gt) -> let lt' = union l lt in lt' `seq` (lt', fnd, gt)\n        go k' t'@(Tip ky y)\n          | k' > ky = (t', Nothing, Nil)\n          | k' < ky = (Nil, Nothing, t')\n          | otherwise = (Nil, Just y, Nil)\n        go _ Nil = (Nil, Nothing, Nil)"],"usages":[{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Bin"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"<"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":">="},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"valueIdentifier":"union"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"seq"},"qualification":null},{"reference":{"otherSlice":6817481598170301897},"usedName":{"valueIdentifier":"nomatch"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":">"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Maybe","constructorIdentifier":"Nothing"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Nil"},"qualification":null},{"reference":{"otherSlice":8074001225160819453},"usedName":{"valueIdentifier":"zero"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"otherwise"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeName":"IntMap","constructorIdentifier":"Tip"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeName":"Maybe","constructorIdentifier":"Just"},"qualification":null},{"reference":{"otherSlice":6676978071093904330},"usedName":{"typeIdentifier":"Key"},"qualification":null},{"reference":{"otherSlice":6169963112424050884},"usedName":{"typeIdentifier":"IntMap"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Maybe"},"qualification":null}],"language":["MagicHash","DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}