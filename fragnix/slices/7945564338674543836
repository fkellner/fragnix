{"sliceID":7945564338674543836,"fragment":[" \nreplicateM :: Monad m => Int -> m a -> m (Seq a)","replicateM n x\n  | n >= 0 = unwrapMonad (replicateA n (WrapMonad x))\n  | otherwise =\n    error \"replicateM takes a nonnegative integer argument\""],"usages":[{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":">="},"qualification":null},{"reference":{"originalModule":"Control.Applicative"},"usedName":{"valueIdentifier":"unwrapMonad"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"valueIdentifier":"replicateA"},"qualification":null},{"reference":{"originalModule":"Control.Applicative"},"usedName":{"typeName":"WrappedMonad","constructorIdentifier":"WrapMonad"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"otherwise"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"error"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Monad"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Int"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"typeIdentifier":"Seq"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}