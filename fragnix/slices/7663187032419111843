{"sliceID":7663187032419111843,"fragment":[" \naddDigits4 ::\n           FingerTree (Node (Node a)) ->\n             Digit (Node a) ->\n               Node a ->\n                 Node a ->\n                   Node a ->\n                     Node a ->\n                       Digit (Node a) ->\n                         FingerTree (Node (Node a)) -> FingerTree (Node (Node a))","addDigits4 m1 (One a) b c d e (One f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits4 m1 (One a) b c d e (Two f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits4 m1 (One a) b c d e (Three f g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits4 m1 (One a) b c d e (Four f g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits4 m1 (Two a b) c d e f (One g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits4 m1 (Two a b) c d e f (Two g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits4 m1 (Two a b) c d e f (Three g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits4 m1 (Two a b) c d e f (Four g h i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2\naddDigits4 m1 (Three a b c) d e f g (One h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits4 m1 (Three a b c) d e f g (Two h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits4 m1 (Three a b c) d e f g (Three h i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2\naddDigits4 m1 (Three a b c) d e f g (Four h i j k) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node3 g h i)\n      (node2 j k)\n      m2\naddDigits4 m1 (Four a b c d) e f g h (One i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits4 m1 (Four a b c d) e f g h (Two i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2\naddDigits4 m1 (Four a b c d) e f g h (Three i j k) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node3 g h i)\n      (node2 j k)\n      m2\naddDigits4 m1 (Four a b c d) e f g h (Four i j k l) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node3 g h i)\n      (node3 j k l)\n      m2"," \nappendTree4 ::\n            FingerTree (Node a) ->\n              Node a ->\n                Node a ->\n                  Node a -> Node a -> FingerTree (Node a) -> FingerTree (Node a)","appendTree4 Empty a b c d xs\n  = a `consTree` b `consTree` c `consTree` d `consTree` xs\nappendTree4 xs a b c d Empty\n  = xs `snocTree` a `snocTree` b `snocTree` c `snocTree` d\nappendTree4 (Single x) a b c d xs\n  = x `consTree`\n      a `consTree` b `consTree` c `consTree` d `consTree` xs\nappendTree4 xs a b c d (Single x)\n  = xs `snocTree` a `snocTree` b `snocTree` c `snocTree` d `snocTree`\n      x\nappendTree4 (Deep s1 pr1 m1 sf1) a b c d (Deep s2 pr2 m2 sf2)\n  = Deep (s1 + size a + size b + size c + size d + s2) pr1\n      (addDigits4 m1 sf1 a b c d pr2 m2)\n      sf2"," \naddDigits3 ::\n           FingerTree (Node (Node a)) ->\n             Digit (Node a) ->\n               Node a ->\n                 Node a ->\n                   Node a ->\n                     Digit (Node a) ->\n                       FingerTree (Node (Node a)) -> FingerTree (Node (Node a))","addDigits3 m1 (One a) b c d (One e) m2\n  = appendTree2 m1 (node3 a b c) (node2 d e) m2\naddDigits3 m1 (One a) b c d (Two e f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits3 m1 (One a) b c d (Three e f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits3 m1 (One a) b c d (Four e f g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits3 m1 (Two a b) c d e (One f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits3 m1 (Two a b) c d e (Two f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits3 m1 (Two a b) c d e (Three f g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits3 m1 (Two a b) c d e (Four f g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits3 m1 (Three a b c) d e f (One g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits3 m1 (Three a b c) d e f (Two g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits3 m1 (Three a b c) d e f (Three g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits3 m1 (Three a b c) d e f (Four g h i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2\naddDigits3 m1 (Four a b c d) e f g (One h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits3 m1 (Four a b c d) e f g (Two h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits3 m1 (Four a b c d) e f g (Three h i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2\naddDigits3 m1 (Four a b c d) e f g (Four h i j k) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node3 g h i)\n      (node2 j k)\n      m2"," \naddDigits2 ::\n           FingerTree (Node (Node a)) ->\n             Digit (Node a) ->\n               Node a ->\n                 Node a ->\n                   Digit (Node a) ->\n                     FingerTree (Node (Node a)) -> FingerTree (Node (Node a))","addDigits2 m1 (One a) b c (One d) m2\n  = appendTree2 m1 (node2 a b) (node2 c d) m2\naddDigits2 m1 (One a) b c (Two d e) m2\n  = appendTree2 m1 (node3 a b c) (node2 d e) m2\naddDigits2 m1 (One a) b c (Three d e f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits2 m1 (One a) b c (Four d e f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits2 m1 (Two a b) c d (One e) m2\n  = appendTree2 m1 (node3 a b c) (node2 d e) m2\naddDigits2 m1 (Two a b) c d (Two e f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits2 m1 (Two a b) c d (Three e f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits2 m1 (Two a b) c d (Four e f g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits2 m1 (Three a b c) d e (One f) m2\n  = appendTree2 m1 (node3 a b c) (node3 d e f) m2\naddDigits2 m1 (Three a b c) d e (Two f g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits2 m1 (Three a b c) d e (Three f g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits2 m1 (Three a b c) d e (Four f g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits2 m1 (Four a b c d) e f (One g) m2\n  = appendTree3 m1 (node3 a b c) (node2 d e) (node2 f g) m2\naddDigits2 m1 (Four a b c d) e f (Two g h) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node2 g h) m2\naddDigits2 m1 (Four a b c d) e f (Three g h i) m2\n  = appendTree3 m1 (node3 a b c) (node3 d e f) (node3 g h i) m2\naddDigits2 m1 (Four a b c d) e f (Four g h i j) m2\n  = appendTree4 m1 (node3 a b c) (node3 d e f) (node2 g h)\n      (node2 i j)\n      m2"," \nappendTree2 ::\n            FingerTree (Node a) ->\n              Node a -> Node a -> FingerTree (Node a) -> FingerTree (Node a)","appendTree2 Empty a b xs = a `consTree` b `consTree` xs\nappendTree2 xs a b Empty = xs `snocTree` a `snocTree` b\nappendTree2 (Single x) a b xs\n  = x `consTree` a `consTree` b `consTree` xs\nappendTree2 xs a b (Single x)\n  = xs `snocTree` a `snocTree` b `snocTree` x\nappendTree2 (Deep s1 pr1 m1 sf1) a b (Deep s2 pr2 m2 sf2)\n  = Deep (s1 + size a + size b + s2) pr1\n      (addDigits2 m1 sf1 a b pr2 m2)\n      sf2"," \nappendTree3 ::\n            FingerTree (Node a) ->\n              Node a ->\n                Node a -> Node a -> FingerTree (Node a) -> FingerTree (Node a)","appendTree3 Empty a b c xs\n  = a `consTree` b `consTree` c `consTree` xs\nappendTree3 xs a b c Empty\n  = xs `snocTree` a `snocTree` b `snocTree` c\nappendTree3 (Single x) a b c xs\n  = x `consTree` a `consTree` b `consTree` c `consTree` xs\nappendTree3 xs a b c (Single x)\n  = xs `snocTree` a `snocTree` b `snocTree` c `snocTree` x\nappendTree3 (Deep s1 pr1 m1 sf1) a b c (Deep s2 pr2 m2 sf2)\n  = Deep (s1 + size a + size b + size c + s2) pr1\n      (addDigits3 m1 sf1 a b c pr2 m2)\n      sf2"],"usages":[{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Empty"},"qualification":null},{"reference":{"otherSlice":1777207061107267722},"usedName":{"valueIdentifier":"consTree"},"qualification":null},{"reference":{"otherSlice":8284458717546084480},"usedName":{"valueIdentifier":"snocTree"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Single"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Deep"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"+"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"valueIdentifier":"size"},"qualification":null},{"reference":{"otherSlice":3099060045237062536},"usedName":{"typeName":"Digit","constructorIdentifier":"One"},"qualification":null},{"reference":{"otherSlice":8674135666754659063},"usedName":{"valueIdentifier":"node3"},"qualification":null},{"reference":{"otherSlice":3099060045237062536},"usedName":{"typeName":"Digit","constructorIdentifier":"Two"},"qualification":null},{"reference":{"otherSlice":8515730143996123780},"usedName":{"valueIdentifier":"node2"},"qualification":null},{"reference":{"otherSlice":3099060045237062536},"usedName":{"typeName":"Digit","constructorIdentifier":"Three"},"qualification":null},{"reference":{"otherSlice":3099060045237062536},"usedName":{"typeName":"Digit","constructorIdentifier":"Four"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeIdentifier":"FingerTree"},"qualification":null},{"reference":{"otherSlice":3493516016454963036},"usedName":{"typeIdentifier":"Node"},"qualification":null},{"reference":{"otherSlice":3099060045237062536},"usedName":{"typeIdentifier":"Digit"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}