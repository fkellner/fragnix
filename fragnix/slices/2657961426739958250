{"sliceID":2657961426739958250,"fragment":[" \nchop :: Forest Vertex -> SetM s (Forest Vertex)","chop [] = return []\nchop (Node v ts : us)\n  = do visited <- contains v\n       if visited then chop us else\n         do include v\n            as <- chop ts\n            bs <- chop us\n            return (Node v as : bs)"],"usages":[{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"return"},"qualification":null},{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeName":"Tree","constructorIdentifier":"Node"},"qualification":null},{"reference":{"otherSlice":2992398155512813602},"usedName":{"valueIdentifier":"contains"},"qualification":null},{"reference":{"otherSlice":7576231135115768623},"usedName":{"valueIdentifier":"include"},"qualification":null},{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeIdentifier":"Forest"},"qualification":null},{"reference":{"otherSlice":3161584788727874551},"usedName":{"typeIdentifier":"Vertex"},"qualification":null},{"reference":{"otherSlice":890370250098883682},"usedName":{"typeIdentifier":"SetM"},"qualification":null}],"language":["Rank2Types","Trustworthy"]}