{"sliceID":404900670486479360,"fragment":[" \nnewtype State s a = State{runState :: s -> (s, a)}"," \ninstance Applicative (State s) where\n        pure = return\n        (<*>) = ap"," \ninstance Monad (State s) where\n         \n        {-# INLINE return #-}\n         \n        {-# INLINE (>>=) #-}\n        return x = State $ \\ s -> (s, x)\n        m >>= k\n          = State $\n              \\ s ->\n                case runState m s of\n                    (s', x) -> runState (k x) s'"," \ninstance Functor (State s) where\n        fmap = liftA"],"usages":[{"reference":{"originalModule":"Control.Applicative"},"usedName":{"typeIdentifier":"Applicative"},"qualification":null},{"reference":{"originalModule":"Control.Applicative"},"usedName":{"valueIdentifier":"pure"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"return"},"qualification":null},{"reference":{"originalModule":"Control.Applicative"},"usedName":{"valueOperator":"<*>"},"qualification":null},{"reference":{"originalModule":"Control.Monad"},"usedName":{"valueIdentifier":"ap"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Monad"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"$"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":">>="},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Functor"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"fmap"},"qualification":null},{"reference":{"originalModule":"Control.Applicative"},"usedName":{"valueIdentifier":"liftA"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}