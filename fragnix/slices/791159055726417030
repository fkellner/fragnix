{"sliceID":791159055726417030,"fragment":[" \nunrollPQ :: (e -> e -> Ordering) -> PQueue e -> [e]","unrollPQ cmp = unrollPQ'\n  where  \n        {-# INLINE unrollPQ' #-}\n        unrollPQ' (PQueue x ts) = x : mergePQs0 ts\n        (<>) = mergePQ cmp\n        mergePQs0 Nil = []\n        mergePQs0 (t :& Nil) = unrollPQ' t\n        mergePQs0 (t1 :& (t2 :& ts)) = mergePQs (t1 <> t2) ts\n        mergePQs t ts\n          = t `seq`\n              case ts of\n                  Nil -> unrollPQ' t\n                  t1 :& Nil -> unrollPQ' (t <> t1)\n                  t1 :& (t2 :& ts') -> mergePQs (t <> (t1 <> t2)) ts'"],"usages":[{"reference":{"otherSlice":6328300378702705504},"usedName":{"typeName":"PQueue","constructorIdentifier":"PQueue"},"qualification":null},{"reference":{"otherSlice":6173432137718754753},"usedName":{"valueIdentifier":"mergePQ"},"qualification":null},{"reference":{"otherSlice":6328300378702705504},"usedName":{"typeName":"PQL","constructorIdentifier":"Nil"},"qualification":null},{"reference":{"otherSlice":6328300378702705504},"usedName":{"typeName":"PQL","constructorOperator":":&"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"seq"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Ordering"},"qualification":null},{"reference":{"otherSlice":6328300378702705504},"usedName":{"typeIdentifier":"PQueue"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}