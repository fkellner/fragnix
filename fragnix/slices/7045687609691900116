{"sliceID":7045687609691900116,"fragment":[" \nadjust :: (a -> a) -> Int -> Seq a -> Seq a","adjust f i (Seq xs)\n  | 0 <= i && i < size xs = Seq (adjustTree (const (fmap f)) i xs)\n  | otherwise = Seq xs"],"usages":[{"reference":{"otherSlice":1628352407710261112},"usedName":{"typeName":"Seq","constructorIdentifier":"Seq"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"<="},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"&&"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"<"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"valueIdentifier":"size"},"qualification":null},{"reference":{"otherSlice":5504884044951570770},"usedName":{"valueIdentifier":"adjustTree"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"const"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"fmap"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"otherwise"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Int"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"typeIdentifier":"Seq"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}