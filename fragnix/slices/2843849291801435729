{"sliceID":2843849291801435729,"fragment":[" \nunfoldTreeM_BF :: Monad m => (b -> m (a, [b])) -> b -> m (Tree a)","unfoldTreeM_BF f b\n  = liftM getElement $ unfoldForestQ f (singleton b)\n  where getElement xs\n          = case viewl xs of\n                x :< _ -> x\n                EmptyL -> error \"unfoldTreeM_BF\""],"usages":[{"reference":{"originalModule":"Control.Monad"},"usedName":{"valueIdentifier":"liftM"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"$"},"qualification":null},{"reference":{"otherSlice":6626016429976244168},"usedName":{"valueIdentifier":"unfoldForestQ"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"valueIdentifier":"singleton"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"valueIdentifier":"viewl"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"typeName":"ViewL","constructorOperator":":<"},"qualification":null},{"reference":{"otherSlice":1628352407710261112},"usedName":{"typeName":"ViewL","constructorIdentifier":"EmptyL"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"error"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Monad"},"qualification":null},{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeIdentifier":"Tree"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving"]}