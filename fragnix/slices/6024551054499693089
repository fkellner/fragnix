{"sliceID":6024551054499693089,"fragment":[" \ninitsTree ::\n            (Sized a, Sized b) =>\n            (FingerTree a -> b) -> FingerTree a -> FingerTree b","initsTree _ Empty = Empty\ninitsTree f (Single x) = Single (f (Single x))\ninitsTree f (Deep n pr m sf)\n  = Deep n (fmap (f . digitToTree) (initsDigit pr)) (initsTree f' m)\n      (fmap (f . deep pr m) (initsDigit sf))\n  where f' ms\n          = let Just2 m' node = viewRTree ms in\n              fmap (\\ sf' -> f (deep pr m' sf')) (initsNode node)"],"usages":[{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Empty"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Single"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeName":"FingerTree","constructorIdentifier":"Deep"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"fmap"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"."},"qualification":null},{"reference":{"otherSlice":5966219760769714973},"usedName":{"valueIdentifier":"digitToTree"},"qualification":null},{"reference":{"otherSlice":3608261807123341487},"usedName":{"valueIdentifier":"initsDigit"},"qualification":null},{"reference":{"otherSlice":2394763771172834851},"usedName":{"valueIdentifier":"deep"},"qualification":null},{"reference":{"otherSlice":4852691830867320328},"usedName":{"typeName":"Maybe2","constructorIdentifier":"Just2"},"qualification":null},{"reference":{"otherSlice":198180568465691120},"usedName":{"valueIdentifier":"viewRTree"},"qualification":null},{"reference":{"otherSlice":6338289232216881109},"usedName":{"valueIdentifier":"initsNode"},"qualification":null},{"reference":{"otherSlice":7257616825183973984},"usedName":{"typeIdentifier":"Sized"},"qualification":null},{"reference":{"otherSlice":2148473566623462179},"usedName":{"typeIdentifier":"FingerTree"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving","Trustworthy"]}