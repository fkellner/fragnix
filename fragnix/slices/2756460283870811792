{"sliceID":2756460283870811792,"fragment":[" \ncollect :: Tree (Vertex, Int, Int) -> (Int, Tree [Vertex])","collect (Node (v, dv, lv) ts) = (lv, Node (v : vs) cs)\n  where collected = map collect ts\n        vs = concat [ws | (lw, Node ws _) <- collected, lw < dv]\n        cs\n          = concat\n              [if lw < dv then us else [Node (v : ws) us] |\n               (lw, Node ws us) <- collected]"],"usages":[{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeName":"Tree","constructorIdentifier":"Node"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"map"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"concat"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"<"},"qualification":null},{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeIdentifier":"Tree"},"qualification":null},{"reference":{"otherSlice":3161584788727874551},"usedName":{"typeIdentifier":"Vertex"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"Int"},"qualification":null}],"language":["Rank2Types","Trustworthy"]}