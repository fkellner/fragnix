{"sliceID":7565099652421934655,"fragment":[" \ndraw :: Tree String -> [String]","draw (Node x ts0) = x : drawSubTrees ts0\n  where drawSubTrees [] = []\n        drawSubTrees [t] = \"|\" : shift \"`- \" \"   \" (draw t)\n        drawSubTrees (t : ts)\n          = \"|\" : shift \"+- \" \"|  \" (draw t) ++ drawSubTrees ts\n        shift first other = zipWith (++) (first : repeat other)"],"usages":[{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeName":"Tree","constructorIdentifier":"Node"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueOperator":"++"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"zipWith"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"valueIdentifier":"repeat"},"qualification":null},{"reference":{"otherSlice":7732957417444333530},"usedName":{"typeIdentifier":"Tree"},"qualification":null},{"reference":{"originalModule":"Prelude"},"usedName":{"typeIdentifier":"String"},"qualification":null}],"language":["DeriveDataTypeable","StandaloneDeriving"]}